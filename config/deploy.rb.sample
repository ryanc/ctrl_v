set :application, 'ctrl_v'
set :repo_url, 'http://git.cavi.cc/r/ctrl_v.git'
set :rbenv_type, :user
set :rbenv_ruby, '2.0.0-p247'

# ask :branch, proc { `git rev-parse --abbrev-ref HEAD`.chomp }

set :deploy_to, "/srv/apps/#{fetch(:application)}"
# set :scm, :git

# set :format, :pretty
# set :log_level, :debug
# set :pty, true

set :linked_files, %w{config/database.yml config/secret.key config/settings.yml}
set :linked_dirs, %w(log tmp/pids tmp/sockets)
# set :linked_dirs, %w{bin log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system}

# set :default_env, { path: "/opt/ruby/bin:$PATH" }
# set :keep_releases, 5

set :unicorn_config_path, "#{current_path}/config/unicorn.rb"
set :unicorn_pid, "#{shared_path}/tmp/pids/unicorn.pid"

namespace :deploy do

  desc 'Restart application'
  task :restart do
    on roles(:app), in: :sequence, wait: 5 do
      # Your restart mechanism here, for example:
      # execute :touch, release_path.join('tmp/restart.txt')
      execute %Q(
        if [ -e "#{fetch(:unicorn_pid)}" ]; then \
          kill -USR2 `cat #{fetch(:unicorn_pid)}`
          sleep 2
          if [ -e "#{fetch(:unicorn_pid)}.oldbin" ]; then \
            kill -QUIT `cat #{fetch(:unicorn_pid)}.oldbin`
          fi
        else \
          cd #{current_path}
          RBENV_ROOT=~/.rbenv
          RBENV_VERSION=#{fetch(:rbenv_ruby)}
          ~/.rbenv/bin/rbenv exec bundle exec unicorn -D \
            -c #{fetch(:unicorn_config_path)} \
            -E production
        fi
      )
    end
  end

  after :restart, :clear_cache do
    on roles(:web), in: :groups, limit: 3, wait: 10 do
      # Here we can do anything such as:
      # within release_path do
      #   execute :rake, 'cache:clear'
      # end
    end
  end

  after :finishing, 'deploy:cleanup'

end
